kind: ConfigMap
apiVersion: v1
metadata:
  name: kactus-cfg
  namespace: kube-system
data:
  10-kactus.conf: |
    {
      "name": "kactus-cni-plugin",
      "cniVersion": "0.3.1",
      "type": "kactus",
      "kubeconfig": "/etc/cni/net.d/kactus.d/kactus-kubeconfig.yaml",
      "delegates": [
      {
         "type": "flannel",
         "masterPlugin": true,
         "delegate": {
            "isDefaultGateway": true
         }
      }
    ]
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kactus
  namespace: kube-system
  labels:
    k8s-app: kactus
spec:
  selector:
    matchLabels:
      name: kactus
  template:
    metadata:
      labels:
        name: kactus
    spec:
      serviceAccountName: kactus
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
      - name: install-cni
        image: kaloom/kactus:0.1.0
        command:
        - sh
        args: [ "-c", "install -d 755 /host/opt/kaloom/cni/bin; cp /kactus /host/opt/kaloom/cni/bin; cp /etc/cni/net.d/10-kactus.conf /host/etc/cni/net.d" ]
        volumeMounts:
        - name: hostopt
          mountPath: /host/opt
        - name: hostcninet
          mountPath: /host/etc/cni/net.d
        - name: cninet
          mountPath: /etc/cni/net.d
      containers:
      - name: kactus
        image: kaloom/kactus:0.1.0
        args: ["/bin/bash", "-c", "sleep infinity" ]
      volumes:
      - name: hostopt
        hostPath:
          path: /opt
      - name: hostcninet
        hostPath:
          path: /etc/cni/net.d
      - name: cninet
        configMap:
          name: kactus-cfg
